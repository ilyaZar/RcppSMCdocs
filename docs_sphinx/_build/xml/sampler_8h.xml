<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="sampler_8h" kind="file" language="C++">
    <compoundname>sampler.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">iostream</includes>
    <includes refid="population_8h" local="yes">population.h</includes>
    <includes refid="history_8h" local="yes">history.h</includes>
    <includes refid="moveset_8h" local="yes">moveset.h</includes>
    <includes refid="adaptMethods_8h" local="yes">adaptMethods.h</includes>
    <includes refid="smc-exception_8h" local="yes">smc-exception.h</includes>
    <includes refid="staticModelAdapt_8h" local="yes">staticModelAdapt.h</includes>
    <includedby refid="smctc_8h" local="yes">/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/smctc.h</includedby>
    <includedby refid="conditionalSampler_8h" local="yes">/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/conditionalSampler.h</includedby>
    <includedby refid="RcppSMC_8h" local="no">/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/RcppSMC.h</includedby>
    <incdepgraph>
      <node id="14">
        <label>staticModelAdapt.h</label>
        <link refid="staticModelAdapt_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>moveset.h</label>
        <link refid="moveset_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="7">
        <label>float.h</label>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>RcppArmadillo.h</label>
      </node>
      <node id="13">
        <label>smc-exception.h</label>
        <link refid="smc-exception_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>adaptMethods.h</label>
        <link refid="adaptMethods_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>population.h</label>
        <link refid="population_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstdlib</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>history.h</label>
        <link refid="history_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/sampler.h</label>
        <link refid="sampler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/conditionalSampler.h</label>
        <link refid="conditionalSampler_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/pflineart.h</label>
        <link refid="pflineart_8h"/>
      </node>
      <node id="6">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/LinReg_LA.h</label>
        <link refid="LinReg__LA_8h"/>
      </node>
      <node id="5">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/cSMCexamples.h</label>
        <link refid="cSMCexamples_8h"/>
      </node>
      <node id="10">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/pfnonlinbs.h</label>
        <link refid="pfnonlinbs_8h"/>
      </node>
      <node id="3">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/blockpfgaussianopt.h</label>
        <link refid="blockpfgaussianopt_8h"/>
      </node>
      <node id="4">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/RcppSMC.h</label>
        <link refid="RcppSMC_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/nonLinPMMH.h</label>
        <link refid="nonLinPMMH_8h"/>
      </node>
      <node id="7">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/LinReg_LA_adapt.h</label>
        <link refid="LinReg__LA__adapt_8h"/>
      </node>
      <node id="1">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/sampler.h</label>
        <link refid="sampler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/smctc.h</label>
        <link refid="smctc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classsmc_1_1nullParams" prot="public">smc::nullParams</innerclass>
    <innerclass refid="classsmc_1_1sampler" prot="public">smc::sampler</innerclass>
    <innernamespace refid="namespaceResampleType">ResampleType</innernamespace>
    <innernamespace refid="namespacePathSamplingType">PathSamplingType</innernamespace>
    <innernamespace refid="namespaceHistoryType">HistoryType</innernamespace>
    <innernamespace refid="namespacesmc">smc</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="sampler_8h_1a96556358c5d5335159eb80b6529feadf" prot="public" static="no">
        <name>__SMC_SAMPLER_HH</name>
        <initializer>1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/sampler.h" line="31" column="9" bodyfile="/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/sampler.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines the overall sampler object. </para>
    </briefdescription>
    <detaileddescription>
<para>This file defines the <ref refid="classsmc_1_1sampler" kindref="compound">smc::sampler</ref> class which is used to implement entire particle systems. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>-*-<sp/>mode:<sp/>C++;<sp/>c-indent-level:<sp/>4;<sp/>c-basic-offset:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sampler.h:<sp/>Rcpp<sp/>integration<sp/>of<sp/>SMC<sp/>library<sp/>--<sp/>sampler<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008<sp/>-<sp/>2009<sp/><sp/>Adam<sp/>Johansen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2017<sp/>-<sp/>2020<sp/><sp/>Adam<sp/>Johansen,<sp/>Dirk<sp/>Eddelbuettel<sp/>and<sp/>Leah<sp/>South</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2021<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adam<sp/>Johansen,<sp/>Dirk<sp/>Eddelbuettel,<sp/>Leah<sp/>South<sp/>and<sp/>Ilya<sp/>Zarubin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>RcppSMC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RcppSMC<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RcppSMC<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>RcppSMC.<sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SMC_SAMPLER_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="sampler_8h_1a96556358c5d5335159eb80b6529feadf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SMC_SAMPLER_HH<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="population_8h" kindref="compound">population.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="history_8h" kindref="compound">history.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="moveset_8h" kindref="compound">moveset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="adaptMethods_8h" kindref="compound">adaptMethods.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="smc-exception_8h" kindref="compound">smc-exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="staticModelAdapt_8h" kindref="compound">staticModelAdapt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="namespaceResampleType" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceResampleType" kindref="compound">ResampleType</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47" refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba0207afd43440ab190cc0dd07bab5ba78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eb" kindref="member">Enum</ref><sp/>{<sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba0207afd43440ab190cc0dd07bab5ba78" kindref="member">MULTINOMIAL</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="48" refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba87e69e5e3b594ebbaf9b91e3b4c11168" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba87e69e5e3b594ebbaf9b91e3b4c11168" kindref="member">RESIDUAL</ref>,</highlight></codeline>
<codeline lineno="49" refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba47fcb7a0a69fdf1075e11d616cb8783b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba47fcb7a0a69fdf1075e11d616cb8783b" kindref="member">STRATIFIED</ref>,</highlight></codeline>
<codeline lineno="50" refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6ebac25b219e8be6e967aaf5c4011935fe7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6ebac25b219e8be6e967aaf5c4011935fe7d" kindref="member">SYSTEMATIC</ref><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespacePathSamplingType" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacePathSamplingType" kindref="compound">PathSamplingType</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56" refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614da32bc9c84af00767367ced38e687869da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614d" kindref="member">Enum</ref><sp/>{<sp/><ref refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614da32bc9c84af00767367ced38e687869da" kindref="member">TRAPEZOID2</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="57" refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614dac3287e3782a18e753ff2d3a888f7a2a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614dac3287e3782a18e753ff2d3a888f7a2a6" kindref="member">TRAPEZOID1</ref>,</highlight></codeline>
<codeline lineno="58" refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614da42f1f053b9781a7ec871027d81b52e59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614da42f1f053b9781a7ec871027d81b52e59" kindref="member">RECTANGLE</ref>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="namespaceHistoryType" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceHistoryType" kindref="compound">HistoryType</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65" refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a1755a29ac60a2ebeb8a4c4b27f48bcde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077" kindref="member">Enum</ref><sp/>{<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a1755a29ac60a2ebeb8a4c4b27f48bcde" kindref="member">NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="66" refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a63a959270994a6dff6ef90da8d618d28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a63a959270994a6dff6ef90da8d618d28" kindref="member">RAM</ref>,</highlight></codeline>
<codeline lineno="67" refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a454abec07203b210d7a9a2662a68f8f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a454abec07203b210d7a9a2662a68f8f1" kindref="member">AL</ref>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesmc" kindref="compound">smc</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classsmc_1_1nullParams" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsmc_1_1nullParams" kindref="compound">nullParams</ref>{};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params<sp/>=<sp/>nullParams&gt;</highlight></codeline>
<codeline lineno="77" refid="classsmc_1_1sampler" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsmc_1_1sampler" kindref="compound">sampler</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81" refid="classsmc_1_1sampler_1aa19bb3728da5cbe6db9211348fb699e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1aa19bb3728da5cbe6db9211348fb699e6" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="83" refid="classsmc_1_1sampler_1a49562c192a35a61bfa8d3cbc0c8e38a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a49562c192a35a61bfa8d3cbc0c8e38a2" kindref="member">T</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classsmc_1_1sampler_1a86ec66749d53010f5e7a0025288ee05e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eb" kindref="member">ResampleType::Enum</ref><sp/><ref refid="classsmc_1_1sampler_1a86ec66749d53010f5e7a0025288ee05e" kindref="member">rtResampleMode</ref>;</highlight></codeline>
<codeline lineno="88" refid="classsmc_1_1sampler_1ab85e9e87029de1d0660d887d7582cfcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ab85e9e87029de1d0660d887d7582cfcf" kindref="member">dResampleThreshold</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classsmc_1_1sampler_1ae7129c31c690eac51762006b4014e550" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/><ref refid="classsmc_1_1sampler_1ae7129c31c690eac51762006b4014e550" kindref="member">dRSWeights</ref>;</highlight></codeline>
<codeline lineno="93" refid="classsmc_1_1sampler_1a9fe0293cd6610777c5e638761c13bf5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;int&gt;<sp/><ref refid="classsmc_1_1sampler_1a9fe0293cd6610777c5e638761c13bf5f" kindref="member">uRSCount</ref>;</highlight></codeline>
<codeline lineno="95" refid="classsmc_1_1sampler_1a5438b36f90d688120e76289a87dd287c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;unsigned<sp/>int&gt;<sp/><ref refid="classsmc_1_1sampler_1a5438b36f90d688120e76289a87dd287c" kindref="member">uRSIndices</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classsmc_1_1sampler_1ad9ab90f6fc45429d544031e50047d101" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1population" kindref="compound">population&lt;Space&gt;</ref><sp/><ref refid="classsmc_1_1sampler_1ad9ab90f6fc45429d544031e50047d101" kindref="member">pPopulation</ref>;</highlight></codeline>
<codeline lineno="100" refid="classsmc_1_1sampler_1a96300615cb900608783ebe2ebf22d001" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1moveset" kindref="compound">moveset&lt;Space,Params&gt;</ref>*<sp/><ref refid="classsmc_1_1sampler_1a96300615cb900608783ebe2ebf22d001" kindref="member">pMoves</ref>;</highlight></codeline>
<codeline lineno="102" refid="classsmc_1_1sampler_1a5f02b1f0615afc33b0daa5d0ae82cfbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a5f02b1f0615afc33b0daa5d0ae82cfbf" kindref="member">movesetBelong</ref>;</highlight></codeline>
<codeline lineno="104" refid="classsmc_1_1sampler_1a545305926af1a03a471c81fbd72ab431" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Params<sp/><ref refid="classsmc_1_1sampler_1a545305926af1a03a471c81fbd72ab431" kindref="member">algParams</ref>;</highlight></codeline>
<codeline lineno="106" refid="classsmc_1_1sampler_1aaba69d99b529db6c77aa69f07ea605a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1adaptMethods" kindref="compound">adaptMethods&lt;Space,Params&gt;</ref>*<sp/><ref refid="classsmc_1_1sampler_1aaba69d99b529db6c77aa69f07ea605a5" kindref="member">pAdapt</ref>;</highlight></codeline>
<codeline lineno="108" refid="classsmc_1_1sampler_1abaf3a81e80f9f3297a5d67542bfb03ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1abaf3a81e80f9f3297a5d67542bfb03ec" kindref="member">adaptBelong</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classsmc_1_1sampler_1a54ae775cd4c20870aee5ca353c3f8cb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a54ae775cd4c20870aee5ca353c3f8cb3" kindref="member">nAccepted</ref>;</highlight></codeline>
<codeline lineno="113" refid="classsmc_1_1sampler_1a82570bda66ba66fecbf675c4f803ab56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a82570bda66ba66fecbf675c4f803ab56" kindref="member">nResampled</ref>;</highlight></codeline>
<codeline lineno="115" refid="classsmc_1_1sampler_1a978a2613da180ac511f186dc01c92d94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a978a2613da180ac511f186dc01c92d94" kindref="member">nRepeats</ref>;</highlight></codeline>
<codeline lineno="118" refid="classsmc_1_1sampler_1a46a71bac0445a1793e681717e648bef8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a46a71bac0445a1793e681717e648bef8" kindref="member">acceptProb</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classsmc_1_1sampler_1ad1e75bebf7a4377aafb0c4d9e006e921" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ad1e75bebf7a4377aafb0c4d9e006e921" kindref="member">dlogNCPath</ref>;</highlight></codeline>
<codeline lineno="123" refid="classsmc_1_1sampler_1a80eba70fd89db813093dd69ff6015263" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a80eba70fd89db813093dd69ff6015263" kindref="member">dlogNCIt</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classsmc_1_1sampler_1aece26a4146d52c7392594e6d1ffe0968" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077" kindref="member">HistoryType::Enum</ref><sp/><ref refid="classsmc_1_1sampler_1aece26a4146d52c7392594e6d1ffe0968" kindref="member">htHistoryMode</ref>;</highlight></codeline>
<codeline lineno="128" refid="classsmc_1_1sampler_1a8b5be5010088140e00206b0995dca5a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;historyelement&lt;Space&gt;<sp/>&gt;<sp/><ref refid="classsmc_1_1sampler_1a8b5be5010088140e00206b0995dca5a7" kindref="member">History</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a1ff2ec789f32dbf115823960e5158e6f" kindref="member">_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler" kindref="compound">sampler&lt;Space,Params&gt;</ref><sp/>&amp;<sp/>sFrom);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1sampler_1a472b2a204b08daf80dc98794388904ee" kindref="member">sampler</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lSize,<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077" kindref="member">HistoryType::Enum</ref><sp/><ref refid="classsmc_1_1sampler_1aece26a4146d52c7392594e6d1ffe0968" kindref="member">htHistoryMode</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1sampler_1a472b2a204b08daf80dc98794388904ee" kindref="member">sampler</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lSize,<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077" kindref="member">HistoryType::Enum</ref><sp/><ref refid="classsmc_1_1sampler_1aece26a4146d52c7392594e6d1ffe0968" kindref="member">htHistoryMode</ref>,<sp/><ref refid="classsmc_1_1moveset" kindref="compound">moveset&lt;Space,Params&gt;</ref>*);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1sampler_1af9a1977c9da4adbf9b0a01db00eab189" kindref="member">~sampler</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1sampler_1a472b2a204b08daf80dc98794388904ee" kindref="member">sampler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler" kindref="compound">sampler&lt;Space,Params&gt;</ref><sp/>&amp;<sp/>sFrom);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1sampler" kindref="compound">sampler&lt;Space,Params&gt;</ref><sp/>&amp;<sp/><ref refid="classsmc_1_1sampler_1af94b34b4e20b6daad4dd517f0c6006c4" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler" kindref="compound">sampler&lt;Space,Params&gt;</ref><sp/>&amp;<sp/>sFrom);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a0406aa8a7b757523bd7a5c4d98caa9c1" kindref="member">GetESS</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147" refid="classsmc_1_1sampler_1a2f9085247e3f2d87290f561dbfe35004" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a2f9085247e3f2d87290f561dbfe35004" kindref="member">GetAccepted</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a54ae775cd4c20870aee5ca353c3f8cb3" kindref="member">nAccepted</ref>;}</highlight></codeline>
<codeline lineno="149" refid="classsmc_1_1sampler_1a7e9fdd095cdcdaba35c93eea378e23be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a7e9fdd095cdcdaba35c93eea378e23be" kindref="member">GetResampled</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a82570bda66ba66fecbf675c4f803ab56" kindref="member">nResampled</ref>;}</highlight></codeline>
<codeline lineno="151" refid="classsmc_1_1sampler_1a6148fbbaa125e4994c336e720478f187" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a6148fbbaa125e4994c336e720478f187" kindref="member">GetMcmcRepeats</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a978a2613da180ac511f186dc01c92d94" kindref="member">nRepeats</ref>;}</highlight></codeline>
<codeline lineno="153" refid="classsmc_1_1sampler_1aaa249a5a25153b7cf1f9188af2c4f484" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;historyelement&lt;Space&gt;<sp/>&gt;<sp/>&amp;<sp/><ref refid="classsmc_1_1sampler_1aaa249a5a25153b7cf1f9188af2c4f484" kindref="member">GetHistory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a8b5be5010088140e00206b0995dca5a7" kindref="member">History</ref>;<sp/>}</highlight></codeline>
<codeline lineno="155" refid="classsmc_1_1sampler_1a3237ecc12bb3f858b6f48f9c2b6eb3ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a3237ecc12bb3f858b6f48f9c2b6eb3ef" kindref="member">GetNumber</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1aa19bb3728da5cbe6db9211348fb699e6" kindref="member">N</ref>;}</highlight></codeline>
<codeline lineno="157" refid="classsmc_1_1sampler_1ae86060f9971051532a4e6baa8a153763" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ae86060f9971051532a4e6baa8a153763" kindref="member">GetHistoryLength</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a8b5be5010088140e00206b0995dca5a7" kindref="member">History</ref>.size();}</highlight></codeline>
<codeline lineno="159" refid="classsmc_1_1sampler_1a8915daf3ad97533e36ae323dda68dea2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1population" kindref="compound">population&lt;Space&gt;</ref><sp/><ref refid="classsmc_1_1sampler_1a8915daf3ad97533e36ae323dda68dea2" kindref="member">GetHistoryPopulation</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a8b5be5010088140e00206b0995dca5a7" kindref="member">History</ref>[n].GetValues();}</highlight></codeline>
<codeline lineno="161" refid="classsmc_1_1sampler_1aaf6f7c243bac495d749dc2489b02a5ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1population" kindref="compound">population&lt;Space&gt;</ref><sp/>&amp;<sp/><ref refid="classsmc_1_1sampler_1aaf6f7c243bac495d749dc2489b02a5ab" kindref="member">GetHistoryPopulationRefs</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a8b5be5010088140e00206b0995dca5a7" kindref="member">History</ref>[n].GetValues();}</highlight></codeline>
<codeline lineno="163" refid="classsmc_1_1sampler_1a0dea2ff19de9e6e1b3fb5c73fe282f3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1historyflags" kindref="compound">historyflags</ref><sp/><ref refid="classsmc_1_1sampler_1a0dea2ff19de9e6e1b3fb5c73fe282f3a" kindref="member">GetHistoryFlags</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a8b5be5010088140e00206b0995dca5a7" kindref="member">History</ref>[n].GetFlags();}</highlight></codeline>
<codeline lineno="165" refid="classsmc_1_1sampler_1a2488928f15eb62dc87a2ae3c499ca9a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a2488928f15eb62dc87a2ae3c499ca9a9" kindref="member">GetESS</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a8b5be5010088140e00206b0995dca5a7" kindref="member">History</ref>[n].GetESS();}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;population&lt;Space&gt;&gt;<sp/><ref refid="classsmc_1_1sampler_1a7eb0ba76e8f078b6ce6b5c518d5e3b5c" kindref="member">GetAPop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;unsigned<sp/>int&gt;<sp/><ref refid="classsmc_1_1sampler_1ae8a186552e53e040839b98564e91f4a1" kindref="member">GetALineInd</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Space&gt;<sp/><ref refid="classsmc_1_1sampler_1aa9b88abc6028271d0e004dd4a4071ab6" kindref="member">GetALineSpace</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173" refid="classsmc_1_1sampler_1aef934b9a2559dce156fae29645ab4089" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;unsigned<sp/>int&gt;<sp/><ref refid="classsmc_1_1sampler_1aef934b9a2559dce156fae29645ab4089" kindref="member">GetuRSIndices</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a5438b36f90d688120e76289a87dd287c" kindref="member">uRSIndices</ref>;}</highlight></codeline>
<codeline lineno="175" refid="classsmc_1_1sampler_1a758b1a6af2c727c43c36de09155db059" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a758b1a6af2c727c43c36de09155db059" kindref="member">GetuRSIndex</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a5438b36f90d688120e76289a87dd287c" kindref="member">uRSIndices</ref>(n);}</highlight></codeline>
<codeline lineno="177" refid="classsmc_1_1sampler_1a29473291fd6cba8202718214cc8c2516" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a29473291fd6cba8202718214cc8c2516" kindref="member">GetHistorymcmcRepeats</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a8b5be5010088140e00206b0995dca5a7" kindref="member">History</ref>[n].mcmcRepeats();}</highlight></codeline>
<codeline lineno="179" refid="classsmc_1_1sampler_1a3f9b62085c0162b2afb951944cefbbe7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Params<sp/>&amp;<sp/><ref refid="classsmc_1_1sampler_1a3f9b62085c0162b2afb951944cefbbe7" kindref="member">GetAlgParams</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a545305926af1a03a471c81fbd72ab431" kindref="member">algParams</ref>;}</highlight></codeline>
<codeline lineno="181" refid="classsmc_1_1sampler_1ade4aede0b9ad6001c02e4953bbb90557" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Space<sp/>&amp;<sp/><sp/><ref refid="classsmc_1_1sampler_1ade4aede0b9ad6001c02e4953bbb90557" kindref="member">GetParticleValueN</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ad9ab90f6fc45429d544031e50047d101" kindref="member">pPopulation</ref>.GetValueN(n);<sp/>}</highlight></codeline>
<codeline lineno="183" refid="classsmc_1_1sampler_1a5393edbfe9e1daa3cceb0ea9e20f0d45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a5393edbfe9e1daa3cceb0ea9e20f0d45" kindref="member">GetParticleLogWeightN</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ad9ab90f6fc45429d544031e50047d101" kindref="member">pPopulation</ref>.GetLogWeightN(n);<sp/>}</highlight></codeline>
<codeline lineno="185" refid="classsmc_1_1sampler_1a02f231667a23e4ea95af2ff559984b5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a02f231667a23e4ea95af2ff559984b5b" kindref="member">GetParticleWeightN</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ad9ab90f6fc45429d544031e50047d101" kindref="member">pPopulation</ref>.GetWeightN(n);<sp/>}</highlight></codeline>
<codeline lineno="187" refid="classsmc_1_1sampler_1a396dcf31c7bbe9a53b9a499042489a5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/><ref refid="classsmc_1_1sampler_1a396dcf31c7bbe9a53b9a499042489a5b" kindref="member">GetParticleWeight</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ad9ab90f6fc45429d544031e50047d101" kindref="member">pPopulation</ref>.GetWeight();<sp/>}</highlight></codeline>
<codeline lineno="189" refid="classsmc_1_1sampler_1ab9d45cfd0a2787bab0c111d5df0c3b77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ab9d45cfd0a2787bab0c111d5df0c3b77" kindref="member">GetTime</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a49562c192a35a61bfa8d3cbc0c8e38a2" kindref="member">T</ref>;}</highlight></codeline>
<codeline lineno="191" refid="classsmc_1_1sampler_1a4df9333a991d86b8ebf9ff348ee9f485" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a4df9333a991d86b8ebf9ff348ee9f485" kindref="member">GetLogNCPath</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ad1e75bebf7a4377aafb0c4d9e006e921" kindref="member">dlogNCPath</ref>;<sp/>}</highlight></codeline>
<codeline lineno="193" refid="classsmc_1_1sampler_1a0ebe5470f04d674a1de0f4600bd5e893" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a0ebe5470f04d674a1de0f4600bd5e893" kindref="member">GetLogNCStep</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a80eba70fd89db813093dd69ff6015263" kindref="member">dlogNCIt</ref>;<sp/>}</highlight></codeline>
<codeline lineno="195" refid="classsmc_1_1sampler_1ae09ba8feb389b3446f15f861a0272c17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ae09ba8feb389b3446f15f861a0272c17" kindref="member">GetNCPath</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exp(<ref refid="classsmc_1_1sampler_1ad1e75bebf7a4377aafb0c4d9e006e921" kindref="member">dlogNCPath</ref>);<sp/>}</highlight></codeline>
<codeline lineno="197" refid="classsmc_1_1sampler_1a4f551a266ddf05e99c27c794087f3ded" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a4f551a266ddf05e99c27c794087f3ded" kindref="member">GetNCStep</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exp(<ref refid="classsmc_1_1sampler_1a80eba70fd89db813093dd69ff6015263" kindref="member">dlogNCIt</ref>);<sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a1dc27a34f7ab2c35751caf9cc88c8e8a" kindref="member">Initialise</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a666b56f6f8b32f43d357db96a5b5c6f2" kindref="member">Integrate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*pIntegrand)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Space<sp/>&amp;,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pAuxiliary);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ac7314f471000c8f7dca1cc5d42ca2a64" kindref="member">IntegratePathSampling</ref>(<ref refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614d" kindref="member">PathSamplingType::Enum</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(*pIntegrand)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Space<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(*pWidth)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pAuxiliary);</highlight></codeline>
<codeline lineno="205" refid="classsmc_1_1sampler_1a62bbf526a0c5c504dee165b75cc4c420" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a62bbf526a0c5c504dee165b75cc4c420" kindref="member">IntegratePathSampling</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(*pIntegrand)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Space<sp/>&amp;,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(*pWidth)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pAuxiliary)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a62bbf526a0c5c504dee165b75cc4c420" kindref="member">IntegratePathSampling</ref>(<ref refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614da32bc9c84af00767367ced38e687869da" kindref="member">PathSamplingType::TRAPEZOID2</ref>,<sp/>pIntegrand,<sp/>pWidth,<sp/>pAuxiliary);}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ae7d9eafdf6a741541425f1b57bde4cc8" kindref="member">Iterate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a625924dbea2b9e202ac36a49d558aeb1" kindref="member">IterateBack</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ac5528d39e667d64956261451517ff2e5" kindref="member">IterateEss</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ad787394d903686a67c92e2ec4a41816c" kindref="member">IterateUntil</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lTerminate);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ac4e9ce4b69d34c4ae9d0cb923dc6b2ed" kindref="member">MoveParticles</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a899baefc9c092a8162a7f1f775bda983" kindref="member">Resample</ref>(<ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eb" kindref="member">ResampleType::Enum</ref><sp/>lMode);</highlight></codeline>
<codeline lineno="219" refid="classsmc_1_1sampler_1a2de74263c4be0fdc81779485bec9d5e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a2de74263c4be0fdc81779485bec9d5e9" kindref="member">SetMoveSet</ref>(<ref refid="classsmc_1_1moveset" kindref="compound">moveset&lt;Space,Params&gt;</ref>*<sp/>pNewMoves)<sp/>{</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a96300615cb900608783ebe2ebf22d001" kindref="member">pMoves</ref>;<sp/><ref refid="classsmc_1_1sampler_1a96300615cb900608783ebe2ebf22d001" kindref="member">pMoves</ref><sp/>=<sp/>pNewMoves;<sp/><ref refid="classsmc_1_1sampler_1a5f02b1f0615afc33b0daa5d0ae82cfbf" kindref="member">movesetBelong</ref><sp/>=<sp/>0;}</highlight></codeline>
<codeline lineno="221" refid="classsmc_1_1sampler_1a8c1a6e83082941584894bfdf4e4a1de0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a8c1a6e83082941584894bfdf4e4a1de0" kindref="member">SetMoveSet</ref>(<ref refid="classsmc_1_1moveset" kindref="compound">moveset&lt;Space,Params&gt;</ref><sp/>&amp;<sp/>NewMoves)<sp/>{</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a96300615cb900608783ebe2ebf22d001" kindref="member">pMoves</ref>;<sp/><ref refid="classsmc_1_1sampler_1a96300615cb900608783ebe2ebf22d001" kindref="member">pMoves</ref><sp/>=<sp/>&amp;NewMoves;<sp/><ref refid="classsmc_1_1sampler_1a5f02b1f0615afc33b0daa5d0ae82cfbf" kindref="member">movesetBelong</ref><sp/>=<sp/>0;}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ada0a4d9961ed7f5f4d5849fb6911c146" kindref="member">SetResampleParams</ref>(<ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eb" kindref="member">ResampleType::Enum</ref><sp/>rtMode,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dThreshold);</highlight></codeline>
<codeline lineno="225" refid="classsmc_1_1sampler_1ae83b30eb2cb7f8bb3d975bda840f6119" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ae83b30eb2cb7f8bb3d975bda840f6119" kindref="member">SetAlgParam</ref>(Params<sp/>parameters)<sp/>{<ref refid="classsmc_1_1sampler_1a545305926af1a03a471c81fbd72ab431" kindref="member">algParams</ref><sp/>=<sp/>parameters;}</highlight></codeline>
<codeline lineno="227" refid="classsmc_1_1sampler_1a179a809335bde824bed2f4c11aee1b93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a179a809335bde824bed2f4c11aee1b93" kindref="member">SetAdaptMethods</ref>(<ref refid="classsmc_1_1adaptMethods" kindref="compound">adaptMethods&lt;Space,Params&gt;</ref>*<sp/>adaptMethod)<sp/>{</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1aaba69d99b529db6c77aa69f07ea605a5" kindref="member">pAdapt</ref>;<sp/><ref refid="classsmc_1_1sampler_1aaba69d99b529db6c77aa69f07ea605a5" kindref="member">pAdapt</ref><sp/>=<sp/>adaptMethod;<sp/><ref refid="classsmc_1_1sampler_1abaf3a81e80f9f3297a5d67542bfb03ec" kindref="member">adaptBelong</ref><sp/>=<sp/>0;}</highlight></codeline>
<codeline lineno="229" refid="classsmc_1_1sampler_1a9360d394cfb5bba57775235a930be017" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a9360d394cfb5bba57775235a930be017" kindref="member">SetMcmcRepeats</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reps)<sp/>{<ref refid="classsmc_1_1sampler_1a978a2613da180ac511f186dc01c92d94" kindref="member">nRepeats</ref><sp/>=<sp/>reps;}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;<sp/><ref refid="classsmc_1_1sampler_1a1baaee3a9ae3ec89c636f1e6ec55f38c" kindref="member">StreamParticle</ref>(std::ostream<sp/>&amp;<sp/>os,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;<sp/><ref refid="classsmc_1_1sampler_1a0b10f998db4499d5e60887060b6d0ad3" kindref="member">StreamParticles</ref>(std::ostream<sp/>&amp;<sp/>os)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a53807d342ac4a41e4ac4044fed2885d3" kindref="member">OstreamMCMCRecordToStream</ref>(std::ostream<sp/>&amp;os)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a448d1939002343af0369b696f0761689" kindref="member">OstreamResamplingRecordToStream</ref>(std::ostream<sp/>&amp;os)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241" refid="classsmc_1_1sampler_1a5a9865da2c6bc998d865114c574cb426" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a5a9865da2c6bc998d865114c574cb426" kindref="member">CalcLogNC</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacesmc_1aaa30e89b2e4c9913d9a8b9b79d482308" kindref="member">stableLogSumWeights</ref>(<ref refid="classsmc_1_1sampler_1ad9ab90f6fc45429d544031e50047d101" kindref="member">pPopulation</ref>.GetLogWeight());}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="254" refid="classsmc_1_1sampler_1aded691199afcc2e24f1faf2886449794" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1sampler_1a472b2a204b08daf80dc98794388904ee" kindref="member">sampler&lt;Space,Params&gt;::sampler</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lSize,<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077" kindref="member">HistoryType::Enum</ref><sp/>htHM,<sp/><ref refid="classsmc_1_1moveset" kindref="compound">moveset&lt;Space,Params&gt;</ref>*<sp/>pNewMoves)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>lSize;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSCount<sp/>=<sp/>arma::zeros&lt;arma::Col&lt;int&gt;<sp/>&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Some<sp/>workable<sp/>defaults.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htHistoryMode<sp/>=<sp/>htHM;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtResampleMode<sp/>=<sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba47fcb7a0a69fdf1075e11d616cb8783b" kindref="member">ResampleType::STRATIFIED</ref>;;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dResampleThreshold<sp/>=<sp/>0.5<sp/>*<sp/>N;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>an<sp/>empty<sp/>adaptation<sp/>object<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1adaptMethods" kindref="compound">adaptMethods&lt;Space,Params&gt;</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adaptBelong<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRepeats<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adding<sp/>the<sp/>moveset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMoves<sp/>=<sp/>pNewMoves;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movesetBelong<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="283" refid="classsmc_1_1sampler_1a472b2a204b08daf80dc98794388904ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1sampler_1a472b2a204b08daf80dc98794388904ee" kindref="member">sampler&lt;Space,Params&gt;::sampler</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lSize,<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077" kindref="member">HistoryType::Enum</ref><sp/>htHM)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>lSize;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSCount<sp/>=<sp/>arma::zeros&lt;arma::Col&lt;int&gt;<sp/>&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Some<sp/>workable<sp/>defaults.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htHistoryMode<sp/>=<sp/>htHM;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtResampleMode<sp/>=<sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba47fcb7a0a69fdf1075e11d616cb8783b" kindref="member">ResampleType::STRATIFIED</ref>;;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dResampleThreshold<sp/>=<sp/>0.5<sp/>*<sp/>N;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>an<sp/>empty<sp/>adaptation<sp/>object<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1adaptMethods" kindref="compound">adaptMethods&lt;Space,Params&gt;</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adaptBelong<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRepeats<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Creating<sp/>a<sp/>default<sp/>moveset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMoves<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1moveset" kindref="compound">moveset&lt;Space,Params&gt;</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movesetBelong<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="304" refid="classsmc_1_1sampler_1af9a1977c9da4adbf9b0a01db00eab189" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1sampler_1af9a1977c9da4adbf9b0a01db00eab189" kindref="member">sampler&lt;Space,Params&gt;::~sampler</ref>()</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(adaptBelong)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pAdapt;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(movesetBelong)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMoves;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deep-copy,<sp/>to<sp/>be<sp/>used<sp/>both<sp/>for<sp/>copy<sp/>constructor<sp/>and<sp/>assignment<sp/>overload.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="314" refid="classsmc_1_1sampler_1a1ff2ec789f32dbf115823960e5158e6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a1ff2ec789f32dbf115823960e5158e6f" kindref="member">sampler&lt;Space, Params&gt;::_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler" kindref="compound">sampler&lt;Space,Params&gt;</ref><sp/>&amp;<sp/>sFrom)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1aa19bb3728da5cbe6db9211348fb699e6" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a49562c192a35a61bfa8d3cbc0c8e38a2" kindref="member">T</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtResampleMode<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a86ec66749d53010f5e7a0025288ee05e" kindref="member">rtResampleMode</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dResampleThreshold<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1ab85e9e87029de1d0660d887d7582cfcf" kindref="member">dResampleThreshold</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dRSWeights<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1ae7129c31c690eac51762006b4014e550" kindref="member">dRSWeights</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSCount<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a9fe0293cd6610777c5e638761c13bf5f" kindref="member">uRSCount</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSIndices<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a5438b36f90d688120e76289a87dd287c" kindref="member">uRSIndices</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPopulation<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1ad9ab90f6fc45429d544031e50047d101" kindref="member">pPopulation</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sFrom.<ref refid="classsmc_1_1sampler_1a5f02b1f0615afc33b0daa5d0ae82cfbf" kindref="member">movesetBelong</ref>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>only<sp/>happen<sp/>if<sp/>the<sp/>default<sp/>moveset<sp/>was<sp/>used,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.,<sp/>no<sp/>call<sp/>to<sp/>SetMoveSet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMoves<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1moveset" kindref="compound">moveset&lt;Space,Params&gt;</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movesetBelong<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>only<sp/>happen<sp/>if<sp/>SetMoveSet<sp/>was<sp/>called,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.,<sp/>pMoves<sp/>points<sp/>to<sp/>an<sp/>external<sp/>object<sp/>which<sp/>should<sp/>not<sp/>be<sp/>deleted<sp/>with<sp/>sampler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMoves<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a96300615cb900608783ebe2ebf22d001" kindref="member">pMoves</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movesetBelong<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>///<sp/>Moveset<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pMoves<sp/>=<sp/>sFrom.pMoves;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>///A<sp/>flag<sp/>to<sp/>track<sp/>whether<sp/>the<sp/>moveset<sp/>object<sp/>needs<sp/>to<sp/>be<sp/>included<sp/>in<sp/>this<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>movesetBelong<sp/>=<sp/>sFrom.movesetBelong<sp/>sFrom.movesetBelong;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algParams<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a545305926af1a03a471c81fbd72ab431" kindref="member">algParams</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sFrom.<ref refid="classsmc_1_1sampler_1abaf3a81e80f9f3297a5d67542bfb03ec" kindref="member">adaptBelong</ref>)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>only<sp/>happen<sp/>if<sp/>the<sp/>default<sp/>adaptMethods<sp/>was<sp/>used,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.,<sp/>no<sp/>call<sp/>to<sp/>SetAdaptMethods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1adaptMethods" kindref="compound">adaptMethods&lt;Space,Params&gt;</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adaptBelong<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>only<sp/>happen<sp/>if<sp/>SetAdaptMethods<sp/>was<sp/>called,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.,<sp/>pAdapt<sp/>points<sp/>to<sp/>an<sp/>external<sp/>object<sp/>which<sp/>should<sp/>not<sp/>be<sp/>deleted<sp/>with<sp/>sampler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1aaba69d99b529db6c77aa69f07ea605a5" kindref="member">pAdapt</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adaptBelong<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>///<sp/>An<sp/>object<sp/>for<sp/>adapting<sp/>additional<sp/>algorithm<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pAdapt<sp/>=<sp/>sFrom.pAdapt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>///A<sp/>flag<sp/>to<sp/>track<sp/>whether<sp/>the<sp/>adaptation<sp/>object<sp/>needs<sp/>to<sp/>be<sp/>included<sp/>in<sp/>this<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adaptBelong<sp/>=<sp/>sFrom.adaptBelong<sp/>sFrom.adaptBelong;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAccepted<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a54ae775cd4c20870aee5ca353c3f8cb3" kindref="member">nAccepted</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nResampled<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a82570bda66ba66fecbf675c4f803ab56" kindref="member">nResampled</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRepeats<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a978a2613da180ac511f186dc01c92d94" kindref="member">nRepeats</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptProb<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a46a71bac0445a1793e681717e648bef8" kindref="member">acceptProb</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlogNCPath<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1ad1e75bebf7a4377aafb0c4d9e006e921" kindref="member">dlogNCPath</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlogNCIt<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a80eba70fd89db813093dd69ff6015263" kindref="member">dlogNCIt</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htHistoryMode<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1aece26a4146d52c7392594e6d1ffe0968" kindref="member">htHistoryMode</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>History<sp/>=<sp/>sFrom.<ref refid="classsmc_1_1sampler_1a8b5be5010088140e00206b0995dca5a7" kindref="member">History</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="393" refid="classsmc_1_1sampler_1ae72324aabe7dcd082881f45b43f6f750" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1sampler_1a472b2a204b08daf80dc98794388904ee" kindref="member">sampler&lt;Space,Params&gt;::sampler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler" kindref="compound">sampler&lt;Space,Params&gt;</ref><sp/>&amp;<sp/>sFrom)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_copy(sFrom);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="399" refid="classsmc_1_1sampler_1af94b34b4e20b6daad4dd517f0c6006c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1sampler" kindref="compound">sampler&lt;Space,Params&gt;</ref><sp/>&amp;<sp/><ref refid="classsmc_1_1sampler_1af94b34b4e20b6daad4dd517f0c6006c4" kindref="member">sampler&lt;Space,Params&gt;::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler" kindref="compound">sampler&lt;Space,Params&gt;</ref><sp/>&amp;<sp/>sFrom)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;sFrom)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adaptBelong)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pAdapt;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(movesetBelong)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMoves;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_copy(sFrom);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="414" refid="classsmc_1_1sampler_1a0406aa8a7b757523bd7a5c4d98caa9c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a0406aa8a7b757523bd7a5c4d98caa9c1" kindref="member">sampler&lt;Space,Params&gt;::GetESS</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="415"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expl(2*<ref refid="namespacesmc_1aaa30e89b2e4c9913d9a8b9b79d482308" kindref="member">stableLogSumWeights</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>())-<ref refid="namespacesmc_1aaa30e89b2e4c9913d9a8b9b79d482308" kindref="member">stableLogSumWeights</ref>(2.0*pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="419" refid="classsmc_1_1sampler_1a7eb0ba76e8f078b6ce6b5c518d5e3b5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;population&lt;Space&gt;&gt;<sp/><ref refid="classsmc_1_1sampler_1a7eb0ba76e8f078b6ce6b5c518d5e3b5c" kindref="member">sampler&lt;Space,Params&gt;::GetAPop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="420"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>GetNumber();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>historyLength<sp/>=<sp/>GetHistoryLength();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;population&lt;Space&gt;<sp/>&gt;<sp/>populationAL(historyLength);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;unsigned<sp/>int&gt;<sp/>tmpAI<sp/>=<sp/>History[historyLength-1].GetAIndices();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>populationAL[historyLength-1]<sp/>=<sp/>GetHistoryPopulation(historyLength-1);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(historyLength<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>historyLength<sp/>-<sp/>2;<sp/>t<sp/>&gt;=<sp/>0;<sp/>--t){</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i){</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>populationAL[t].SetValueN(GetHistoryPopulation(t).GetValueN(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tmpAI(i))),<sp/>i);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpAI<sp/>=<sp/>(History[t].GetAIndices()).elem(tmpAI);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>populationAL;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="446" refid="classsmc_1_1sampler_1ae8a186552e53e040839b98564e91f4a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Col&lt;unsigned<sp/>int&gt;<sp/><ref refid="classsmc_1_1sampler_1ae8a186552e53e040839b98564e91f4a1" kindref="member">sampler&lt;Space, Params&gt;::GetALineInd</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="447"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>historyLength<sp/>=<sp/>GetHistoryLength();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmpAI<sp/>=<sp/>(History[historyLength-1].GetAIndices()).at(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(n));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;unsigned<sp/>int&gt;<sp/>ALineInd(historyLength);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALineInd[historyLength<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(n);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>historyLength<sp/>-<sp/>2;<sp/>t<sp/>&gt;=<sp/>0;<sp/>--t){</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpAI<sp/>=<sp/>(History[t].GetAIndices()).at(tmpAI);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALineInd[t]<sp/>=<sp/>tmpAI;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ALineInd;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="462" refid="classsmc_1_1sampler_1aa9b88abc6028271d0e004dd4a4071ab6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Space&gt;<sp/><ref refid="classsmc_1_1sampler_1aa9b88abc6028271d0e004dd4a4071ab6" kindref="member">sampler&lt;Space,Params&gt;::GetALineSpace</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="463"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>historyLength<sp/>=<sp/>GetHistoryLength();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Space&gt;<sp/>ALineSpace(historyLength);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;unsigned<sp/>int&gt;<sp/>ALineInd(historyLength);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALineInd<sp/>=<sp/>this-&gt;GetALineInd(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(n));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>historyLength;<sp/>++t){</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALineSpace[t]<sp/>=<sp/>GetHistoryPopulation(t).GetValueN(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ALineInd(t)));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ALineSpace;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="482" refid="classsmc_1_1sampler_1a1dc27a34f7ab2c35751caf9cc88c8e8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a1dc27a34f7ab2c35751caf9cc88c8e8a" kindref="member">sampler&lt;Space,Params&gt;::Initialise</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlogNCPath<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptProb<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>initial<sp/>values<sp/>and<sp/>log<sp/>weights<sp/>of<sp/>the<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Space&gt;<sp/>InitVal(N);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>InitWeights(N);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPopulation<sp/>=<sp/><ref refid="classsmc_1_1population" kindref="compound">population&lt;Space&gt;</ref>(InitVal,InitWeights);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMoves-&gt;<ref refid="classsmc_1_1moveset_1ab262a9789a6e9204441b8d46ccd4dba9" kindref="member">DoInit</ref>(pPopulation,N,algParams);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Scaling<sp/>weights<sp/>by<sp/>1/N<sp/>(for<sp/>evidence<sp/>computation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPopulation.<ref refid="classsmc_1_1population_1aa3e891ee4bac69ea5248e7af20c9e18d" kindref="member">SetLogWeight</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()<sp/>-<sp/>log(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N)));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Estimate<sp/>the<sp/>normalising<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlogNCIt<sp/>=<sp/>CalcLogNC();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlogNCPath<sp/>+=<sp/>dlogNCIt;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normalise<sp/>the<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPopulation.<ref refid="classsmc_1_1population_1aa3e891ee4bac69ea5248e7af20c9e18d" kindref="member">SetLogWeight</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()<sp/>-<sp/>dlogNCIt);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>ESS<sp/>is<sp/>below<sp/>some<sp/>reasonable<sp/>threshold<sp/>and<sp/>resample<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//A<sp/>mechanism<sp/>for<sp/>setting<sp/>this<sp/>threshold<sp/>is<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ESS<sp/>=<sp/>GetESS();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ESS<sp/>&lt;<sp/>dResampleThreshold)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nResampled<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt-&gt;<ref refid="classsmc_1_1adaptMethods_1a642c9827bc6ed466160886219a0c0d8f" kindref="member">updateForMCMC</ref>(algParams,pPopulation,acceptProb,nResampled,nRepeats);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resample(rtResampleMode);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nResampled<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(htHistoryMode<sp/>==<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a454abec07203b210d7a9a2662a68f8f1" kindref="member">HistoryType::AL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSIndices<sp/>=<sp/>arma::linspace&lt;arma::Col&lt;unsigned<sp/>int&gt;&gt;(0,<sp/>N<sp/>-<sp/>1,<sp/>N);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt-&gt;<ref refid="classsmc_1_1adaptMethods_1a642c9827bc6ed466160886219a0c0d8f" kindref="member">updateForMCMC</ref>(algParams,pPopulation,acceptProb,nResampled,nRepeats);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//A<sp/>possible<sp/>MCMC<sp/>step<sp/>should<sp/>be<sp/>included<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>didMCMC<sp/>=<sp/><sp/>pMoves-&gt;<ref refid="classsmc_1_1moveset_1adbefc0b5ff0d22b94b031a960f8a8c27" kindref="member">DoMCMC</ref>(0,pPopulation,<sp/>N,<sp/>nRepeats,<sp/>nAccepted,algParams);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(didMCMC){</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptProb<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nAccepted)/(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N)*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nRepeats));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normalise<sp/>the<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPopulation.<ref refid="classsmc_1_1population_1aa3e891ee4bac69ea5248e7af20c9e18d" kindref="member">SetLogWeight</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()<sp/>-<sp/>CalcLogNC());</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Perform<sp/>any<sp/>final<sp/>updates<sp/>to<sp/>the<sp/>additional<sp/>algorithm<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt-&gt;<ref refid="classsmc_1_1adaptMethods_1a2f8373020e442ab65ef657097e2d4c03" kindref="member">updateEnd</ref>(algParams,pPopulation);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Finally,<sp/>the<sp/>current<sp/>particle<sp/>set<sp/>should<sp/>be<sp/>appended<sp/>to<sp/>the<sp/>historical<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(htHistoryMode<sp/>!=<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a1755a29ac60a2ebeb8a4c4b27f48bcde" kindref="member">HistoryType::NONE</ref>){</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>History.clear();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1historyelement" kindref="compound">historyelement&lt;Space&gt;</ref><sp/>histel;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(htHistoryMode)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a63a959270994a6dff6ef90da8d618d28" kindref="member">HistoryType::RAM</ref>:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histel.<ref refid="classsmc_1_1historyelement_1a937d74cb8b5ffe8e0aa1e637faef2807" kindref="member">Set</ref>(N,<sp/>pPopulation,<sp/>nAccepted,<sp/>nRepeats,<sp/><ref refid="classsmc_1_1historyflags" kindref="compound">historyflags</ref>(nResampled));</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a454abec07203b210d7a9a2662a68f8f1" kindref="member">HistoryType::AL</ref>:</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histel.<ref refid="classsmc_1_1historyelement_1a937d74cb8b5ffe8e0aa1e637faef2807" kindref="member">Set</ref>(N,<sp/>pPopulation,<sp/>nAccepted,<sp/>nRepeats,<sp/><ref refid="classsmc_1_1historyflags" kindref="compound">historyflags</ref>(nResampled),<sp/>uRSIndices);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a1755a29ac60a2ebeb8a4c4b27f48bcde" kindref="member">HistoryType::NONE</ref>:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>History.push_back(histel);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="560" refid="classsmc_1_1sampler_1a666b56f6f8b32f43d357db96a5b5c6f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a666b56f6f8b32f43d357db96a5b5c6f2" kindref="member">sampler&lt;Space,Params&gt;::Integrate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*pIntegrand)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Space&amp;,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pAuxiliary)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wSum<sp/>=<sp/>expl(<ref refid="namespacesmc_1aaa30e89b2e4c9913d9a8b9b79d482308" kindref="member">stableLogSumWeights</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rValue<sp/>+=<sp/>expl(pPopulation.<ref refid="classsmc_1_1population_1a5b42f094323cc2425825d82be7842e77" kindref="member">GetLogWeightN</ref>(i))<sp/>*<sp/>pIntegrand(pPopulation.<ref refid="classsmc_1_1population_1a9f81f8d12af9ba884741be1cfb183c5c" kindref="member">GetValueN</ref>(i),<sp/>pAuxiliary);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rValue<sp/>/=<sp/>wSum;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rValue);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="603" refid="classsmc_1_1sampler_1ac7314f471000c8f7dca1cc5d42ca2a64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ac7314f471000c8f7dca1cc5d42ca2a64" kindref="member">sampler&lt;Space,Params&gt;::IntegratePathSampling</ref>(<ref refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614d" kindref="member">PathSamplingType::Enum</ref><sp/>PStype,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(*pIntegrand)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Space<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(*pWidth)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pAuxiliary)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(htHistoryMode<sp/>==<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a1755a29ac60a2ebeb8a4c4b27f48bcde" kindref="member">HistoryType::NONE</ref>)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="smc-exception_8h_1a3294208165bcb4936a39183596f3b1f6" kindref="member">SMC_EXCEPTION</ref>(<ref refid="smc-exception_8h_1a984f7b1fde8d8091971664718d5554a3" kindref="member">SMCX_MISSING_HISTORY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>path<sp/>sampling<sp/>integral<sp/>cannot<sp/>be<sp/>computed<sp/>as<sp/>the<sp/>history<sp/>of<sp/>the<sp/>system<sp/>was<sp/>not<sp/>stored.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>historyelement&lt;Space&gt;<sp/>histel;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>histel.Set(N,<sp/>pPopulation,<sp/>nAccepted,<sp/>nRepeats,<sp/>historyflags(nResampled));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>History.push_back(histel);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lTime<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rValue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;historyelement&lt;Space&gt;<sp/>&gt;::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(PStype)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614da42f1f053b9781a7ec871027d81b52e59" kindref="member">PathSamplingType::RECTANGLE</ref>:</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>++History.begin();<sp/>it!=History.end();<sp/>it++){</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rValue<sp/>+=<sp/>it-&gt;Integrate(lTime,<sp/>pIntegrand,<sp/>pAuxiliary)<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pWidth(lTime,pAuxiliary));</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lTime++;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614dac3287e3782a18e753ff2d3a888f7a2a6" kindref="member">PathSamplingType::TRAPEZOID1</ref>:</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>previous_expt<sp/>=<sp/>History.begin()-&gt;Integrate(0,pIntegrand,pAuxiliary);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_expt;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>++History.begin();<sp/>it!=History.end();<sp/>it++){</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_expt<sp/>=<sp/>it-&gt;Integrate(lTime,<sp/>pIntegrand,<sp/>pAuxiliary);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rValue<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pWidth(lTime,pAuxiliary))/2.0<sp/>*<sp/>(previous_expt<sp/>+<sp/>current_expt)<sp/>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lTime++;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_expt<sp/>=<sp/>current_expt;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacePathSamplingType_1a180b59ee4c6c2fa015480c609640614da32bc9c84af00767367ced38e687869da" kindref="member">PathSamplingType::TRAPEZOID2</ref>:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>previous_expt<sp/>=<sp/>History.begin()-&gt;Integrate(0,pIntegrand,pAuxiliary);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>previous_var<sp/>=<sp/>History.begin()-&gt;Integrate_Var(0,pIntegrand,previous_expt,pAuxiliary);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_expt;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_var;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>++History.begin();<sp/>it!=History.end();<sp/>it++){</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_expt<sp/>=<sp/>it-&gt;Integrate(lTime,<sp/>pIntegrand,<sp/>pAuxiliary);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_var<sp/>=<sp/>it-&gt;Integrate_Var(lTime,<sp/>pIntegrand,<sp/>current_expt,<sp/>pAuxiliary);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pWidth(lTime,pAuxiliary));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rValue<sp/>+=<sp/>width/2.0<sp/>*<sp/>(previous_expt<sp/>+<sp/>current_expt)<sp/>-<sp/>std::pow(width,2.0)/12.0*(current_var<sp/>-<sp/>previous_var);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lTime++;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_expt<sp/>=<sp/>current_expt;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_var<sp/>=<sp/>current_var;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>History.pop_back();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rValue);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="678" refid="classsmc_1_1sampler_1ae7d9eafdf6a741541425f1b57bde4cc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ae7d9eafdf6a741541425f1b57bde4cc8" kindref="member">sampler&lt;Space,Params&gt;::Iterate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IterateEss();</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="685" refid="classsmc_1_1sampler_1a625924dbea2b9e202ac36a49d558aeb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a625924dbea2b9e202ac36a49d558aeb1" kindref="member">sampler&lt;Space,Params&gt;::IterateBack</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(htHistoryMode<sp/>==<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a1755a29ac60a2ebeb8a4c4b27f48bcde" kindref="member">HistoryType::NONE</ref>)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="smc-exception_8h_1a3294208165bcb4936a39183596f3b1f6" kindref="member">SMC_EXCEPTION</ref>(<ref refid="smc-exception_8h_1a984f7b1fde8d8091971664718d5554a3" kindref="member">SMCX_MISSING_HISTORY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>attempt<sp/>to<sp/>undo<sp/>an<sp/>iteration<sp/>was<sp/>made;<sp/>unfortunately,<sp/>the<sp/>system<sp/>history<sp/>has<sp/>not<sp/>been<sp/>stored.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>History.pop_back();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1historyelement" kindref="compound">historyelement&lt;Space&gt;</ref><sp/>recent<sp/>=<sp/>History.back();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPopulation<sp/>=<sp/>recent.<ref refid="classsmc_1_1historyelement_1a41c634dfaa108fe51b9cf7a66121e9a2" kindref="member">GetRefs</ref>();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=recent.<ref refid="classsmc_1_1historyelement_1a9524c99e0173d1b2244c30b7fa29f0e6" kindref="member">GetNumber</ref>();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAccepted<sp/>=<sp/>recent.<ref refid="classsmc_1_1historyelement_1a703582146b53ef99d37c128e73ab4538" kindref="member">AcceptCount</ref>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nResampled<sp/>=<sp/>recent.<ref refid="classsmc_1_1historyelement_1abbf23e201874f2d75a615dfd550b8603" kindref="member">WasResampled</ref>();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRepeats<sp/>=<sp/>recent.<ref refid="classsmc_1_1historyelement_1aa79e02ab98b7b603c05b9f1af6d18823" kindref="member">mcmcRepeats</ref>();</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T--;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="702" refid="classsmc_1_1sampler_1ac5528d39e667d64956261451517ff2e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ac5528d39e667d64956261451517ff2e5" kindref="member">sampler&lt;Space,Params&gt;::IterateEss</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt-&gt;<ref refid="classsmc_1_1adaptMethods_1a96614576030dc76fbf7d64d0416d6f52" kindref="member">updateForMove</ref>(algParams,pPopulation);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move<sp/>the<sp/>particle<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoveParticles();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Estimate<sp/>the<sp/>normalising<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlogNCIt<sp/>=<sp/>CalcLogNC();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlogNCPath<sp/>+=<sp/>dlogNCIt;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normalise<sp/>the<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPopulation.<ref refid="classsmc_1_1population_1aa3e891ee4bac69ea5248e7af20c9e18d" kindref="member">SetLogWeight</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()<sp/><sp/>-<sp/>dlogNCIt);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>ESS<sp/>is<sp/>below<sp/>some<sp/>reasonable<sp/>threshold<sp/>and<sp/>resample<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//A<sp/>mechanism<sp/>for<sp/>setting<sp/>this<sp/>threshold<sp/>is<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ESS<sp/>=<sp/>GetESS();</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ESS<sp/>&lt;<sp/>dResampleThreshold)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nResampled<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt-&gt;<ref refid="classsmc_1_1adaptMethods_1a642c9827bc6ed466160886219a0c0d8f" kindref="member">updateForMCMC</ref>(algParams,pPopulation,acceptProb,nResampled,nRepeats);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resample(rtResampleMode);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nResampled<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(htHistoryMode<sp/>==<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a454abec07203b210d7a9a2662a68f8f1" kindref="member">HistoryType::AL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSIndices<sp/>=<sp/>arma::linspace&lt;arma::Col&lt;unsigned<sp/>int&gt;&gt;(0,<sp/>N<sp/>-<sp/>1,<sp/>N);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt-&gt;<ref refid="classsmc_1_1adaptMethods_1a642c9827bc6ed466160886219a0c0d8f" kindref="member">updateForMCMC</ref>(algParams,pPopulation,acceptProb,nResampled,nRepeats);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//A<sp/>possible<sp/>MCMC<sp/>step<sp/>should<sp/>be<sp/>included<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>didMCMC<sp/>=<sp/>pMoves-&gt;<ref refid="classsmc_1_1moveset_1adbefc0b5ff0d22b94b031a960f8a8c27" kindref="member">DoMCMC</ref>(T+1,pPopulation,<sp/>N,<sp/>nRepeats,<sp/>nAccepted,algParams);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(didMCMC){</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptProb<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nAccepted)/(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N)*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nRepeats));</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normalise<sp/>the<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPopulation.<ref refid="classsmc_1_1population_1aa3e891ee4bac69ea5248e7af20c9e18d" kindref="member">SetLogWeight</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()<sp/>-<sp/>CalcLogNC());</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Perform<sp/>any<sp/>final<sp/>updates<sp/>to<sp/>the<sp/>additional<sp/>algorithm<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAdapt-&gt;<ref refid="classsmc_1_1adaptMethods_1a2f8373020e442ab65ef657097e2d4c03" kindref="member">updateEnd</ref>(algParams,pPopulation);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Finally,<sp/>the<sp/>current<sp/>particle<sp/>set<sp/>should<sp/>be<sp/>appended<sp/>to<sp/>the<sp/>historical<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(htHistoryMode<sp/>!=<sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a1755a29ac60a2ebeb8a4c4b27f48bcde" kindref="member">HistoryType::NONE</ref>){</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsmc_1_1historyelement" kindref="compound">historyelement&lt;Space&gt;</ref><sp/>histel;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(htHistoryMode)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a63a959270994a6dff6ef90da8d618d28" kindref="member">HistoryType::RAM</ref>:</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histel.<ref refid="classsmc_1_1historyelement_1a937d74cb8b5ffe8e0aa1e637faef2807" kindref="member">Set</ref>(N,<sp/>pPopulation,<sp/>nAccepted,<sp/>nRepeats,<sp/><ref refid="classsmc_1_1historyflags" kindref="compound">historyflags</ref>(nResampled));</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a454abec07203b210d7a9a2662a68f8f1" kindref="member">HistoryType::AL</ref>:</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histel.<ref refid="classsmc_1_1historyelement_1a937d74cb8b5ffe8e0aa1e637faef2807" kindref="member">Set</ref>(N,<sp/>pPopulation,<sp/>nAccepted,<sp/>nRepeats,<sp/><ref refid="classsmc_1_1historyflags" kindref="compound">historyflags</ref>(nResampled),<sp/>uRSIndices);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceHistoryType_1a486dcf426d91692ddbce0dd2e97a9077a1755a29ac60a2ebeb8a4c4b27f48bcde" kindref="member">HistoryType::NONE</ref>:</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>History.push_back(histel);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>evolution<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T++;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESS;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="767" refid="classsmc_1_1sampler_1ad787394d903686a67c92e2ec4a41816c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ad787394d903686a67c92e2ec4a41816c" kindref="member">sampler&lt;Space,Params&gt;::IterateUntil</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lTerminate)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(T<sp/>&lt;<sp/>lTerminate)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Iterate();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="774" refid="classsmc_1_1sampler_1ac4e9ce4b69d34c4ae9d0cb923dc6b2ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ac4e9ce4b69d34c4ae9d0cb923dc6b2ed" kindref="member">sampler&lt;Space,Params&gt;::MoveParticles</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMoves-&gt;<ref refid="classsmc_1_1moveset_1a1815cd6f6577fa5fe7d558af8061ce0c" kindref="member">DoMove</ref>(T+1,pPopulation,<sp/>N,algParams);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="780" refid="classsmc_1_1sampler_1a899baefc9c092a8162a7f1f775bda983" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a899baefc9c092a8162a7f1f775bda983" kindref="member">sampler&lt;Space,Params&gt;::Resample</ref>(<ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eb" kindref="member">ResampleType::Enum</ref><sp/>lMode)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Resampling<sp/>is<sp/>done<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uMultinomialCount;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//First<sp/>obtain<sp/>a<sp/>count<sp/>of<sp/>the<sp/>number<sp/>of<sp/>children<sp/>each<sp/>particle<sp/>has.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(lMode)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba0207afd43440ab190cc0dd07bab5ba78" kindref="member">ResampleType::MULTINOMIAL</ref>:</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Sample<sp/>from<sp/>a<sp/>suitable<sp/>multinomial<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dRSWeights<sp/>=<sp/>exp(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()<sp/>-<sp/><ref refid="namespacesmc_1aaa30e89b2e4c9913d9a8b9b79d482308" kindref="member">stableLogSumWeights</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()));</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmultinom(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N),<sp/>dRSWeights.memptr(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N),<sp/>uRSCount.memptr());</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba87e69e5e3b594ebbaf9b91e3b4c11168" kindref="member">ResampleType::RESIDUAL</ref>:</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dRSWeights<sp/>=<sp/>exp(log(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N))<sp/>+<sp/>pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()<sp/>-<sp/><ref refid="namespacesmc_1aaa30e89b2e4c9913d9a8b9b79d482308" kindref="member">stableLogSumWeights</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()));</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSIndices<sp/>=<sp/>arma::zeros&lt;arma::Col&lt;unsigned<sp/>int&gt;<sp/>&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N));</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSIndices(i)<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(floor(dRSWeights(i)));</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dRSWeights<sp/>=<sp/>dRSWeights<sp/>-<sp/>uRSIndices;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dRSWeights<sp/>=<sp/>dRSWeights/sum(dRSWeights);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uMultinomialCount<sp/>=<sp/>N<sp/>-<sp/>arma::sum(uRSIndices);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmultinom(uMultinomialCount,<sp/>dRSWeights.memptr(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N),<sp/>uRSCount.memptr());</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSCount<sp/>+=<sp/>arma::conv_to&lt;arma::Col&lt;int&gt;<sp/>&gt;::from(uRSIndices);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eba47fcb7a0a69fdf1075e11d616cb8783b" kindref="member">ResampleType::STRATIFIED</ref>:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Procedure<sp/>for<sp/>stratified<sp/>sampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Generate<sp/>a<sp/>random<sp/>number<sp/>between<sp/>0<sp/>and<sp/>1/N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dRand<sp/>=<sp/>R::runif(0,1.0<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N));</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>dWeightCumulative<sp/>=<sp/>arma::cumsum(exp(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()<sp/>-<sp/><ref refid="namespacesmc_1aaa30e89b2e4c9913d9a8b9b79d482308" kindref="member">stableLogSumWeights</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>())));</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSCount<sp/>=<sp/>arma::zeros&lt;arma::Col&lt;int&gt;<sp/>&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N));</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//while(j<sp/>&lt;<sp/>N)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(k<sp/>&lt;<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((dWeightCumulative(k)<sp/>-<sp/>dRand)<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(j)/</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N)<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSCount(k)++;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dRand<sp/>=<sp/>R::runif(0,1.0<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N));</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6ebac25b219e8be6e967aaf5c4011935fe7d" kindref="member">ResampleType::SYSTEMATIC</ref>:</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Procedure<sp/>for<sp/>stratified<sp/>sampling<sp/>but<sp/>with<sp/>a<sp/>common<sp/>RV<sp/>for<sp/>each<sp/>stratum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Generate<sp/>a<sp/>random<sp/>number<sp/>between<sp/>0<sp/>and<sp/>1/N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dRand<sp/>=<sp/>R::runif(0,1.0<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N));</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSCount<sp/>=<sp/>arma::zeros&lt;arma::Col&lt;int&gt;<sp/>&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>dWeightCumulative<sp/>=<sp/>arma::cumsum(exp(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>()<sp/>-<sp/><ref refid="namespacesmc_1aaa30e89b2e4c9913d9a8b9b79d482308" kindref="member">stableLogSumWeights</ref>(pPopulation.<ref refid="classsmc_1_1population_1aed65bb17ec164b22220502121784072c" kindref="member">GetLogWeight</ref>())));</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//while(j<sp/>&lt;<sp/>N)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(k<sp/>&lt;<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((dWeightCumulative(k)<sp/>-<sp/>dRand)<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(j)/</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N)<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSCount(k)++;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSIndices<sp/>=<sp/>arma::zeros&lt;arma::Col&lt;unsigned<sp/>int&gt;<sp/>&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N));</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Map<sp/>count<sp/>to<sp/>indices<sp/>to<sp/>allow<sp/>in-place<sp/>resampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,<sp/>j=0;<sp/>i&lt;N;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uRSCount(i)&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSIndices(i)<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(uRSCount(i)&gt;1)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(uRSCount(j)&gt;0)<sp/>++j;<sp/></highlight><highlight class="comment">//<sp/>find<sp/>next<sp/>free<sp/>spot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uRSIndices(j++)<sp/>=<sp/>i;<sp/></highlight><highlight class="comment">//<sp/>assign<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--uRSCount(i);<sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>number<sp/>of<sp/>remaining<sp/>offsprings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Perform<sp/>the<sp/>replication<sp/>of<sp/>the<sp/>chosen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N<sp/>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uRSIndices(i)<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i)){</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPopulation.<ref refid="classsmc_1_1population_1a7e43dc61d785bf5b88ce6014b53dfb2a" kindref="member">SetValueN</ref>(<sp/>pPopulation.<ref refid="classsmc_1_1population_1a9f81f8d12af9ba884741be1cfb183c5c" kindref="member">GetValueN</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(uRSIndices(i)))<sp/>,i);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>equal<sp/>normalised<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPopulation.<ref refid="classsmc_1_1population_1aa3e891ee4bac69ea5248e7af20c9e18d" kindref="member">SetLogWeight</ref>(-<sp/>log(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(N))*arma::ones(N));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="886" refid="classsmc_1_1sampler_1ada0a4d9961ed7f5f4d5849fb6911c146" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1ada0a4d9961ed7f5f4d5849fb6911c146" kindref="member">sampler&lt;Space,Params&gt;::SetResampleParams</ref>(<ref refid="namespaceResampleType_1aae1fd87d74ce6bb0168e509df119f6eb" kindref="member">ResampleType::Enum</ref><sp/>rtMode,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dThreshold)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtResampleMode<sp/>=<sp/>rtMode;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dThreshold<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dResampleThreshold<sp/>=<sp/>dThreshold<sp/>*<sp/>N;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dResampleThreshold<sp/>=<sp/>dThreshold;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="900" refid="classsmc_1_1sampler_1a1baaee3a9ae3ec89c636f1e6ec55f38c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;<sp/><ref refid="classsmc_1_1sampler_1a1baaee3a9ae3ec89c636f1e6ec55f38c" kindref="member">sampler&lt;Space,Params&gt;::StreamParticle</ref>(std::ostream<sp/>&amp;<sp/>os,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="901"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>pPopulation.<ref refid="classsmc_1_1population_1a9f81f8d12af9ba884741be1cfb183c5c" kindref="member">GetValueN</ref>(n)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pPopulation.<ref refid="classsmc_1_1population_1a229bc5706bf6afef8073990a345b5a60" kindref="member">GetWeightN</ref>(n)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="910" refid="classsmc_1_1sampler_1a0b10f998db4499d5e60887060b6d0ad3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;<sp/><ref refid="classsmc_1_1sampler_1a0b10f998db4499d5e60887060b6d0ad3" kindref="member">sampler&lt;Space,Params&gt;::StreamParticles</ref>(std::ostream<sp/>&amp;<sp/>os)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="911"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>pPopulation<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="921" refid="classsmc_1_1sampler_1a53807d342ac4a41e4ac4044fed2885d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a53807d342ac4a41e4ac4044fed2885d3" kindref="member">sampler&lt;Space,Params&gt;:: OstreamMCMCRecordToStream</ref>(std::ostream<sp/>&amp;os)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="922"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Accepted<sp/>MCMC<sp/>proposals<sp/>history:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;======================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<ref refid="classsmc_1_1historyelement" kindref="compound">historyelement&lt;Space&gt;</ref><sp/>&gt;::const_iterator<sp/>it<sp/>=<sp/>History.begin();<sp/>it!=History.end();<sp/>it++){</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>it-&gt;AcceptCount()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="934" refid="classsmc_1_1sampler_1a448d1939002343af0369b696f0761689" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsmc_1_1sampler_1a448d1939002343af0369b696f0761689" kindref="member">sampler&lt;Space,Params&gt;:: OstreamResamplingRecordToStream</ref>(std::ostream<sp/>&amp;os)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="935"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Resampling<sp/>history:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;======================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flag\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ESS\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<ref refid="classsmc_1_1historyelement" kindref="compound">historyelement&lt;Space&gt;</ref><sp/>&gt;::const_iterator<sp/>it<sp/>=<sp/>History.begin();<sp/>it!=History.end();<sp/>it++){</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it-&gt;WasResampled())</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>it-&gt;GetESS()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref><sp/>{</highlight></codeline>
<codeline lineno="953"></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Params&gt;</highlight></codeline>
<codeline lineno="957" refid="namespacestd_1aabd24cfa371b609f24469d89c0f3b4ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;<sp/><ref refid="namespacestd_1a5009971eadc5b959926350da2ad8ed03" kindref="member">operator&lt;&lt; </ref>(std::ostream<sp/>&amp;<sp/>os,<sp/><ref refid="classsmc_1_1sampler" kindref="compound">smc::sampler&lt;Space,Params&gt;</ref><sp/>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sampler<sp/>Configuration:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;======================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Evolution<sp/>Time:<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.<ref refid="classsmc_1_1sampler_1ab9d45cfd0a2787bab0c111d5df0c3b77" kindref="member">GetTime</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Particle<sp/>Set<sp/>Size:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.<ref refid="classsmc_1_1sampler_1a3237ecc12bb3f858b6f48f9c2b6eb3ef" kindref="member">GetNumber</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Effective<sp/>Sample<sp/>Size:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.<ref refid="classsmc_1_1sampler_1a0406aa8a7b757523bd7a5c4d98caa9c1" kindref="member">GetESS</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Particle<sp/>Set:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="classsmc_1_1sampler_1a0b10f998db4499d5e60887060b6d0ad3" kindref="member">StreamParticles</ref>(os);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/iz/Dropbox/projects/rcppsmc/RcppSMCdocumentation/include/sampler.h"/>
  </compounddef>
</doxygen>
